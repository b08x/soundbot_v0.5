---

# verify rpm-gpg key; reference fingerprint match here; https://www.centos.org/keys/
- name: 1.2.1 verify CentOS GPG key
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version >= 7
  tags:
    - scored

- name: 1.2.2 verify that gpgcheck is globally enabled
  lineinfile: >
    state=present
    dest=/etc/yum.conf
    regexp=^gpgcheck=
    line=gpgcheck=1
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version >= 7
  tags:
    - scored

- name: check that grub2 exists
  stat: path=/boot/grub2/grub.cfg
  register: grubcfg

- name: 1.5.2 set/verify permissions on /boot/grub2/grub.cfg
  file: path=/boot/grub2/grub.cfg owner=root group=root mode=0600
  when: grubcfg.stat.exists
  tags:
    - scored

#A core dump file is the memory image of an executable program when 
#it was terminated by the operating system due to various error behavior.
#while useful for debugging, core dumps also may contain sensitive info. 
#disable this using limits
- name: 1.6.1 restrict core dumps - via pam
  pam_limits: domain=* limit_type=hard limit_item=core value=0
  tags:
    - scored

- name: 1.6.2 enabled randomized virtual memory region placement
  sysctl: >
    name=kernel.randomize_va_space
    value=1
    state=present
  tags:
    - scored

# unless the host is being used as a router, disable ip forwarding
- name: 4.1.1 Disable IP Forwarding
  sysctl: >
    name=net.ipv4.ip_forward
    value=0
    state=present
  when: not sysctl_ip_forward
  tags:
   - scored

- name: 4.1.2 Disable Send Packet Redirects
  sysctl: >
    name=net.ipv4.conf.all.send_redirects
    value=0
    state=present
  tags:
   - scored

- name: 4.1.2 Disable Send Packet Redirects
  sysctl: >
    name=net.ipv4.conf.default.send_redirects
    value=0
    state=present
  tags:
   - scored

- name: 4.2.1 Disable Source Routed Packet Acceptance
  sysctl: >
    name=net.ipv4.conf.all.accept_source_route
    value=0
    state=present
  tags:
   - scored

- name: 4.2.1 Disable Source Routed Packet Acceptance
  sysctl: >
    name=net.ipv4.conf.default.accept_source_route
    value=0
    state=present
  tags:
   - scored

- name: 4.2.2 Disable ICMP Redirect Acceptance
  sysctl: >
    name=net.ipv4.conf.all.accept_redirects
    value=0
    state=present
  tags:
   - scored

- name: 4.2.2 Disable ICMP Redirect Acceptance
  sysctl: >
    name=net.ipv4.conf.default.accept_redirects
    value=0
    state=present
  tags:
   - scored

- name: 4.2.4 Log Suspicious Packets
  sysctl: >
    name=net.ipv4.conf.all.log_martians
    value=1
    state=present
  tags:
   - scored

- name: 4.2.4 Log Suspicious Packets
  sysctl: >
    name=net.ipv4.conf.default.log_martians
    value=1
    state=present
  tags:
   - scored

- name: 4.2.5 Enable Ignore Broadcast Requests
  sysctl: >
    name=net.ipv4.icmp_echo_ignore_broadcasts
    value=1
    state=present
  tags:
   - scored

- name: 4.2.6 Enable Bad Error Message Protection
  sysctl: >
    name=net.ipv4.icmp_ignore_bogus_error_responses
    value=1
    state=present
  tags:
   - scored

- name: 4.2.8 Enable TCP SYN Cookies
  sysctl: >
    name=net.ipv4.tcp_syncookies
    value=1
    state=present
  tags:
   - scored

# added configuration in rsyslog.conf to read log info from audit.log
- name: copy rsyslog.conf and restart service
  copy: src=rsyslog.conf dest=/etc/rsyslog.conf backup=yes owner=root group=root mode=0644
  notify: restart rsyslog

- name: install audit
  yum: name=audit state=present

# set maxium log file size for audit.log (10mb)
- name: 5.2.1.1 set max log size for audit.log file
  lineinfile: >
    state=present
    dest=/etc/audit/auditd.conf
    regexp="^max_log_file ="
    line="max_log_file = {{ max_log_file }}"
  notify: reload auditd
  tags:
    - notscored

- name: 5.2.1.2 set email to send to when audit logs exceed max log size as opposed to logging to syslog
  lineinfile: >
    state=present
    dest=/etc/audit/auditd.conf
    regexp="^space_left_action ="
    line="space_left_action = {{ space_left_action }}"
  notify: reload auditd
  tags:
    - notscored

- name: 5.2.1.3 set root mail account to send email to
  lineinfile: >
    state=present
    dest=/etc/audit/auditd.conf
    regexp="^action_mail_acct ="
    line="action_mail_acct = {{ action_mail_acct }}"
  notify: reload auditd
  tags:
    - notscored

- name: 5.2.1.4 set auditd to halt system when max log size is exceeded (after an email is sent)
  lineinfile: >
    state=present
    dest=/etc/audit/auditd.conf
    regexp="^admin_space_left_action ="
    line="admin_space_left_action = {{ admin_space_left_action }}"
  notify: reload auditd
  tags:
    - notscored

- name: 5.2.1.5 set auditd to keep all logs
  lineinfile: >
    state=present
    dest=/etc/audit/auditd.conf
    regexp="^max_log_file_action ="
    line="max_log_file_action = {{ max_log_file_action }}"
  notify: reload auditd
  tags:
    - notscored

- name: 5.2.2 enable auditd service
  service: >
    name=auditd
    enabled=yes
    state=started
  tags:
    - scored

- name: check if default grub exists
  stat: path=/etc/default/grub
  register: defaultgrub

- name: 5.2.3 enable auditing for processes that start prior to auditd
  copy: src=etcdefaultgrub dest=/etc/default/grub backup=yes owner=root group=root mode=0644
  when: defaultgrub.stat.exists
  notify: update grub
  tags:
    - scored

- name: 5.2.4 copy audit rules file and reload auditd
  copy: src=audit.rules dest=/etc/audit/audit.rules backup=yes owner=root group=root mode=0640
  notify: reload auditd
  tags:
    - scored

- name: 6.1.1 Enable anacron Daemon
  yum: >
    name=cronie-anacron
    state=present
  tags:
    - scored

- name: 6.1.2 enable crond Daemon
  service: >
    name=crond
    enabled=yes
    state=started
  tags:
    - scored

#only root should have the ability to set cron jobs. 
#ensure cron related files are only readable/writable/executable 
#by user root and group root
- name: 6.1.3 set perms on /etc/crontab
  file: >
    path=/etc/crontab
    owner=root
    group=root
    mode=og-rwx
  tags:
    - scored

- name: 6.1.5 Set User/Group Owner and Permission on /etc/cron.hourly
  file: >
    path=/etc/cron.hourly
    state=directory
    owner=root
    group=root
    mode=og-rwx
  tags:
    - scored

- name: 6.1.6 Set User/Group Owner and Permission on /etc/cron.daily
  file: >
    path=/etc/cron.daily
    state=directory
    owner=root
    group=root
    mode=og-rwx
  tags:
    - scored

- name: 6.1.7 Set User/Group Owner and Permission on /etc/cron.weekly
  file: >
    path=/etc/cron.weekly
    state=directory
    owner=root
    group=root
    mode=og-rwx
  tags:
    - scored

- name: 6.1.8 Set User/Group Owner and Permission on /etc/cron.monthly
  file: >
    path=/etc/cron.monthly
    state=directory
    owner=root
    group=root
    mode=og-rwx
  tags:
    - scored

- name: 6.1.9 Set User/Group Owner and Permission on /etc/cron.d
  file: >
    path=/etc/cron.d
    state=directory
    owner=root
    group=root
    mode=og-rwx
  tags:
    - scored

#if cron.deny/at.deny exists and is empty, 
#then all users are able to set cron/at jobs. 
#remove cron.deny/at.deny and create cron.allow/at.allow
#only users listed in cron.allow/at.allow will be allowed to set cron/at jobs
- name: 6.1.10 remove at.deny
  file: >
    path=/etc/at.deny
    state=absent
  tags:
    - scored

- name: 6.1.11 remove cron.deny
  file: >
    path=/etc/cron.deny
    state=absent
  tags:
    - scored

- name: 6.1.11 create cron.allow if it does not exist
  command: touch /etc/cron.allow creates=/etc/cron.allow
  tags:
    - scored

- name: 6.1.12 ensure proper perms for /etc/cron.allow
  file: >
    path=/etc/cron.allow
    state=file
    owner=root
    group=root
    mode=0600
  tags:
    - scored

# run the comand `touch /etc/at.allow` if /etc/at.allow doest not exist
- name: 6.1.13 create at.allow if it does not exist
  command: touch /etc/at.allow creates=/etc/at.allow
  tags:
    - scored

- name: 6.1.14 ensure proper perms for /etc/at.allow
  file: >
    path=/etc/at.allow
    state=file
    owner=root
    group=root
    mode=0600
  tags:
    - scored

#updated password-auth to enfore lockouts after 3 failed attempts
#use pam_tally2 to manage locked accounts http://unix.stackexchange.com/a/78244
- name: 6.3.3 copy over pam.d password-auth
  copy: src=password-auth dest=/etc/pam.d/password-auth-ac backup=yes owner=root group=root mode=0644 follow=true

# require the user to belong to the wheel group in order to run su
- name: 6.5 restirct access to su
  copy: src=pam.su dest=/etc/pam.d/su backup=yes owner=root group=root mode=0644
  tags:
    - scored

#for password requirements - passwords expire after 180 days, at least 7 characters
#changed from default no expiration and 5 characters
- name: 7.1.1 copy login.defs
  copy: src=login.defs dest=/etc/login.defs backup=yes owner=root group=root mode=0644

- name: 7.1.2 create /etc/security/opassword if it doesn't already exist
  command: touch /etc/security/opassword && chmod 600 /etc/security/opasswd creates=/etc/security/opasswd

- name: 9.1.2 verify perms on /etc/passwd
  file: >
    path=/etc/passwd
    mode=0644
    owner=root
    group=root
  tags:
    - scored

- name: 9.1.3 verify perms on /etc/shadow
  file: >
    path=/etc/shadow
    mode=0000
    owner=root
    group=root
  tags:
    - scored

- name: 9.1.4 verify perms on /etc/gshadow
  file: >
    path=/etc/gshadow
    mode=0000
    owner=root
    group=root
  tags:
    - scored

- name: 9.1.5 verify perms on /etc/group
  file: >
    path=/etc/group
    mode=0644
    owner=root
    group=root
  tags:
    - scored
